<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.timeshaft.after_end.mapper.PersonalMessageMapper">

    <resultMap id="BaseResultMap" type="PersonalMessage">
        <!--@Table personal_message-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="friendsId" column="friends_id" jdbcType="INTEGER"/>
        <result property="senderId" column="sender_id" jdbcType="INTEGER"/>
        <result property="message" column="message" jdbcType="VARCHAR"/>
        <result property="sendtime" column="sendtime" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, friends_id, sender_id, message, sendtime, state
        from timeshaft.personal_message
        where id = #{id}
    </select>

    <!--查询最近的一条消息-->
    <select id="queryLatestById" resultMap="BaseResultMap">
        select
        id, friends_id, sender_id, message, sendtime, state from timeshaft.personal_message
        where friends_id = #{friendsId} and sender_id = #{senderId}
        order by id desc
        limit 0, 1
    </select>

    <!--查询数据库最新消息-->
    <select id="queryLatest" resultMap="BaseResultMap">
        select
        id, friends_id, sender_id, message, sendtime, state from timeshaft.personal_message
        order by id desc
        limit 0, 1
    </select>

    <!--查询历史消息-->
    <select id="queryHistoryById" resultMap="BaseResultMap">
        select
        id, friends_id, sender_id, message, sendtime, state from timeshaft.personal_message
        where friends_id = #{friendsId} and sender_id = #{senderId} and sendtime &lt; #{time}
        order by id desc
        limit 0, 20
    </select>

    <!--查询包含关键词的消息-->
    <select id="queryByKeyword" resultMap="BaseResultMap">
        select
        id, friends_id, sender_id, message, sendtime, state from timeshaft.personal_message
        where friends_id = #{friendsId} and message like concat('%', #{keyword}, '%')
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, friends_id, sender_id, message, sendtime, state
        from timeshaft.personal_message
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, friends_id, sender_id, message, sendtime, state
        from timeshaft.personal_message
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="friendsId != null">
                and friends_id = #{friendsId}
            </if>
            <if test="senderId != null">
                and sender_id = #{senderId}
            </if>
            <if test="message != null and message != ''">
                and message = #{message}
            </if>
            <if test="sendtime != null">
                and sendtime = #{sendtime}
            </if>
            <if test="state != null and state != ''">
                and state = #{state}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into timeshaft.personal_message(friends_id, sender_id, message, sendtime, state)
        values (#{friendsId}, #{senderId}, #{message}, #{sendtime}, #{state})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update timeshaft.personal_message
        <set>
            <if test="friendsId != null">
                friends_id = #{friendsId},
            </if>
            <if test="senderId != null">
                sender_id = #{senderId},
            </if>
            <if test="message != null and message != ''">
                message = #{message},
            </if>
            <if test="sendtime != null">
                sendtime = #{sendtime},
            </if>
            <if test="state != null and state != ''">
                state = #{state},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from timeshaft.personal_message where id = #{id}
    </delete>

    <select id="queryTimeshaft" resultMap="BaseResultMap">
        select
            id, friends_id, sender_id, message, sendtime, state
        from timeshaft.personal_message
        where friends_id = #{group_id} and sendtime between #{startTime} and #{endTime}
    </select>

    <select id="queryBeginEndMsg" resultMap="BaseResultMap">
        select
            id, friends_id, sender_id, message, sendtime, state
        from timeshaft.personal_message
        where friends_id = #{group_id} and id between #{startId} and #{endId}
    </select>
</mapper>