<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.timeshaft.after_end.mapper.GroupMessageMapper">

    <resultMap id="BaseResultMap" type="GroupMessage">
        <!--@Table group_message-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="groupId" column="group_id" jdbcType="INTEGER"/>
        <result property="senderId" column="sender_id" jdbcType="INTEGER"/>
        <result property="message" column="message" jdbcType="VARCHAR"/>
        <result property="sendtime" column="sendtime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, group_id, sender_id, message, sendtime
        from timeshaft.group_message
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, group_id, sender_id, message, sendtime
        from timeshaft.group_message
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, group_id, sender_id, message, sendtime
        from timeshaft.group_message
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="groupId != null">
                and group_id = #{groupId}
            </if>
            <if test="senderId != null">
                and sender_id = #{senderId}
            </if>
            <if test="message != null and message != ''">
                and message = #{message}
            </if>
            <if test="sendtime != null">
                and sendtime = #{sendtime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into timeshaft.group_message(group_id, sender_id, message, sendtime)
        values (#{groupId}, #{senderId}, #{message}, #{sendtime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update timeshaft.group_message
        <set>
            <if test="groupId != null">
                group_id = #{groupId},
            </if>
            <if test="senderId != null">
                sender_id = #{senderId},
            </if>
            <if test="message != null and message != ''">
                message = #{message},
            </if>
            <if test="sendtime != null">
                sendtime = #{sendtime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from timeshaft.group_message where id = #{id}
    </delete>

    <select id="queryTimeshaft" resultMap="BaseResultMap">
        select
            id, group_id, sender_id, message, sendtime
        from timeshaft.group_message
        where group_id = #{group_id} and sendtime between #{startTime} and #{endTime}
    </select>

    <!--查询某人在群聊内的未读消息-->
    <select id="queryNotReadMessage" resultMap="BaseResultMap">
        select
            g.id, g.group_id, g.sender_id, g.message, g.sendtime
        from timeshaft.group_message g, timeshaft.group_message_state s
        where g.group_id = #{groupId} and g.id = s.message_id and s.user_id = #{userId} and s.state = #{state}
    </select>

    <!--查询某群最近的一条消息-->
    <select id="queryLatestById" resultMap="BaseResultMap">
        select
            id, group_id, sender_id, message, sendtime
        from timeshaft.group_message
        where group_id = #{groupId}
        order by id desc
        limit 0, 1
    </select>

    <!--查询历史消息-->
    <select id="queryHistoryById" resultMap="BaseResultMap">
        select
            id, group_id, sender_id, message, sendtime from timeshaft.group_message
        where group_id = #{groupId} and sendtime &lt; #{time}
        order by id desc
        limit 0, 20
    </select>

    <select id="queryBeginEndMsg" resultMap="BaseResultMap">
        select
            id, group_id, sender_id, message, sendtime
        from timeshaft.group_message
        where group_id = #{group_id} and id between #{startId} and #{endId}
    </select>
</mapper>