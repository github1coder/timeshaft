<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace=".dao.com.timeshaft.after_end.mapper.UserTokenMapper">

    <resultMap id="BaseResultMap" type=".entity.UserToken">
        <!--@Table user_token-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, user_id, token
        from timeshaft.user_token
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, user_id, token
        from timeshaft.user_token
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, user_id, token
        from timeshaft.user_token
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into timeshaft.user_token(user_id, token)
        values (#{userId}, #{token})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update timeshaft.user_token
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="token != null and token != ''">
                token = #{token},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from timeshaft.user_token where id = #{id}
    </delete>

</mapper>