## This workflow will build a Java project with Maven
## For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#
#name: SpringBoot
#
#on:
#  push:
#    branches: [ dev ]
#  pull_request:
#    branches: [ dev ]
#
#jobs:
#  build:
#
#    runs-on: CentOS-7.9
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#      - name: BuildDockerImage
#        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
#      - name: Publish to Docker Repository
#        uses: elgohr/Publish-Docker-Github-Action@master
#        with:
#          name: christopherchen/practice:practice
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

name: Deploy with docker

on:
  push:
    # 分支
    branches: [ after_dev ]
  pull_request:
    branches: [ after_dev ]

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # maven缓存，不加的话每次都会去重新拉取，会影响速度
      - name: Dependies Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # 编译打包
      - name: Build with Maven
        run: mvn package -Dmaven.test.skip=true
      # 登录Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      # build 镜像并push到中央仓库中
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/imageName:latest
      # push后，用ssh连接服务器执行脚本
      - name: SSH
        uses: fifsky/ssh-action@master
        with:
          command: |
            sh start.sh
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY}}
